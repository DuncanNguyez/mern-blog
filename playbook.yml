- name: deploy
  hosts: all
  become: true
  become_user: root
  become_method: sudo
  tasks:
    - name: Install requirement system packages
      apt:
        pkg:
          - python3-pip
          - curl
          - ca-certificates
          - apt-transport-https
        state: present

    - name: Add docker gpg apt key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add docker repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        state: present

    - name: Install docker related packages
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin

    - name: Install docker sdk
      pip:
        name:
          - docker==6.1.3
          - docker-compose
          - PyYAML
        state: latest

    - name: Add nodejs apt key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present

    - name: Add nodejs repository
      apt_repository:
        repo: deb https://deb.nodesource.com/node_22.x {{ ansible_lsb.codename }} main
        update_cache: true

    - name: Install nodejs
      apt:
        update_cache: true
        state: present
        name: nodejs

    - name: Install npm package to global
      npm:
        global: true
        name: elasticdump
        state: present

    - name: Create dir project
      file:
        path: /project/blog-app
        state: directory

    - name: Copy docker compose
      copy:
        src: ./server/server-docker-compose.yml
        dest: /project/blog-app/docker-compose.yml

    - name: Copy env
      copy:
        src: ./server/.env
        dest: /project/blog-app/.env

    - name: Copy dbinit
      copy:
        src: ./dbinit
        dest: /project/blog-app
    - name: Log in to Docker registry with token
      docker_login:
        registry_url: "https://index.docker.io/v1/"
        username: "{{ DOCKER_HUB_USER }}"
        password: "{{ DOCKER_REGISTRY_TOKEN }}"

    - name: Run docker compose
      docker_compose:
        project_src: /project/blog-app
        file: docker-compose.yml
        pull: true

    - name: Init database
      shell:
        cmd: cd /project/blog-app/dbinit && sh init.sh
